#!/usr/bin/env ruby
require 'rubygems'
require 'listen'
require 'sass'
require 'fileutils'

def with_clean_env
  if defined?(::Bundler)
    ::Bundler.with_clean_env { yield }
  else
    yield
  end
end

def publish(file)
  FileUtils.cp(file, File.join('public', file), :verbose => true)
end

listen = Listen.to(Dir.pwd, :relative_paths => true)
listen.ignore %r{^(_tmp|_site|public|build)/}

reexec = false
known = []

listen.change do |modified, added, removed|
  modified -= known
  added -= known
  known.clear

  file = modified.first
  case file
  when NilClass, 'Gemfile.lock'
    # do nothing
  when $0
    reexec = true
    listen.stop
  when /\.css$/
    publish file
  when /\.(sass|scss)$/
    target = file.sub(/\.(sass|scss)$/, '.css')
    known << target
    puts "compiling #{file}"
    Sass.compile_file(file, target, :style => :compressed)
    publish target
  when 'Gemfile'
    with_clean_env do
      system('bundle', 'install')
    end
  else
    with_clean_env do
      system('jekyll', 'build')
    end
  end
end

puts "guarding..."

trap(:INT) { listen.stop }

Thread.abort_on_exception = true
listen.start!

exec('ruby', $0) if reexec
